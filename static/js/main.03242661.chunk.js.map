{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkout","state","address","length","creditCard","setState","cart","alert","handleAddressInput","e","target","value","handleCreditCardInput","handleToggleView","cardView","hats","id","title","description","price","imageUrl","quantity","beachGear","item","cartCopy","map","product","assign","index","findIndex","concat","toConsumableArray","splice","_this2","react_default","a","createElement","className","onClick","key","src","addToCart","reduce","totalPrice","toFixed","placeholder","onChange","deleteFromCart","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.03242661.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cardView: true,\r\n      cart: [],\r\n      address: \"\",\r\n      creditCard: \"\",\r\n      hats: [\r\n        {\r\n          id: 1,\r\n          title: \"Fisherman's Hat\",\r\n          description:\r\n            \"Headgear commonly used by fishermen. Increases fishing skill marginally.\",\r\n          price: 12.99,\r\n          imageUrl: \"https://via.placeholder.com/150x150\",\r\n          quantity: 0\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Metal Hat\",\r\n          description: \"Uncomfortable, but sturdy.\",\r\n          price: 8.99,\r\n          imageUrl: \"https://via.placeholder.com/150x150\",\r\n          quantity: 0\r\n        }\r\n      ],\r\n      beachGear: [\r\n        {\r\n          id: 3,\r\n          title: \"Tent\",\r\n          description: \"Portable shelter.\",\r\n          price: 32.99,\r\n          imageUrl: \"https://via.placeholder.com/150x150\",\r\n          quantity: 0\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  addToCart(item) {\r\n    let cartCopy = this.state.cart.map(product => Object.assign({}, product));\r\n    let index = this.state.cart.findIndex(product => product.id === item.id);\r\n\r\n    if (index === -1) {\r\n      item = Object.assign({}, item, { quantity: 1 });\r\n      this.setState({ cart: [...this.state.cart, item] });\r\n    } else {\r\n      cartCopy[index].quantity++;\r\n      this.setState({ cart: cartCopy });\r\n    }\r\n  }\r\n\r\n  deleteFromCart(id) {\r\n    let cartCopy = this.state.cart.map(product => Object.assign({}, product));\r\n    let index = this.state.cart.findIndex(product => product.id === id);\r\n\r\n    if (cartCopy[index].quantity === 1) {\r\n      cartCopy.splice(index, 1);\r\n    } else if (cartCopy[index].quantity > 1) {\r\n      cartCopy[index].quantity--;\r\n    }\r\n\r\n    this.setState({ cart: cartCopy });\r\n  }\r\n\r\n  checkout = () => {\r\n    if (this.state.address.length > 0 && this.state.creditCard.length > 0) {\r\n      this.setState({ cart: [] });\r\n      alert(\"Purchase is complete!\");\r\n    } else {\r\n      alert(\"Please fill out the required fields.\");\r\n    }\r\n  };\r\n\r\n  handleAddressInput = e => {\r\n    this.setState({ address: e.target.value });\r\n  };\r\n\r\n  handleCreditCardInput = e => {\r\n    this.setState({ creditCard: e.target.value });\r\n  };\r\n\r\n  handleToggleView = () => {\r\n    this.setState({ cardView: !this.state.cardView });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <section className=\"products\">\r\n          <h1>Products</h1>\r\n          <button onClick={this.handleToggleView}>Toggle View</button>\r\n          <h2>Hats</h2>\r\n          {this.state.hats.map(item => (\r\n            <div\r\n              key={item.id}\r\n              className={this.state.cardView ? \"product\" : \"product-list\"}\r\n            >\r\n              <img src={item.imageUrl} />\r\n              <div className=\"product-info\">\r\n                <h4>{item.title}</h4>\r\n                <p>{item.description}</p>\r\n                <p>{item.price}</p>\r\n                <button onClick={() => this.addToCart(item)}>\r\n                  Add to Cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          <h2>Beach Gear</h2>\r\n          {this.state.beachGear.map(item => (\r\n            <div\r\n              key={item.id}\r\n              className={this.state.cardView ? \"product\" : \"product-list\"}\r\n            >\r\n              <img src={item.imageUrl} />\r\n              <div className=\"product-info\">\r\n                <h4>{item.title}</h4>\r\n                <p>{item.description}</p>\r\n                <p>{item.price}</p>\r\n                <button onClick={() => this.addToCart(item)}>\r\n                  Add to Cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </section>\r\n\r\n        <section className=\"cart\">\r\n          <h1>Cart</h1>\r\n          <h2>\r\n            Total: $\r\n            {this.state.cart\r\n              .reduce(\r\n                (totalPrice, product) =>\r\n                  (totalPrice += product.price * product.quantity),\r\n                0\r\n              )\r\n              .toFixed(2)}\r\n          </h2>\r\n\r\n          <div className=\"inputs\">\r\n            <input\r\n              placeholder=\"address\"\r\n              value={this.state.address}\r\n              onChange={this.handleAddressInput}\r\n            />\r\n            <input\r\n              placeholder=\"credit card number\"\r\n              value={this.state.creditCard}\r\n              onChange={this.handleCreditCardInput}\r\n            />\r\n          </div>\r\n\r\n          <button onClick={this.checkout}>Checkout</button>\r\n\r\n          {this.state.cart.map(item => (\r\n            <div key={item.id} className=\"product\">\r\n              <img src={item.imageUrl} />\r\n              <div className=\"product-info\">\r\n                <h4>{item.title}</h4>\r\n                <p>Quantity: {item.quantity}</p>\r\n                <p>{item.description}</p>\r\n                <p>{item.price}</p>\r\n\r\n                <button onClick={() => this.deleteFromCart(item.id)}>\r\n                  Remove from Cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}